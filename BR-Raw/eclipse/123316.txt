[Undo] - API BEHAVIOR - should always place a successfully undone/redone op on the redo/undo history

It is possible that an operation performs a successful undo or redo, but the converse is no longer valid, typically due to an error condition. That is, having been undone, an operation realizes it can't be redone, or having been redone, it can't be undone. This is a particular error path in the code (see bug #94400). When the DefaultOperationHistory determines this case, it disposes the operation to prevent a leak. However, no one is notified that the operation is no longer on the history. For example, if an operation is successfully redone but cannot be undone, listeners receive a notification that the redo was successful, and the successful redo is reported in the returned status object. But no one knows that the operation was disposed by the history since it could not be placed on the undo history.