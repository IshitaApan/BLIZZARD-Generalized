[Problems] Problems View takes too long to show

The Problems view does not scale. Either 	use a big workspace, or 	create a New workspace 	Go to Java Perspective 	Close the problems view. 	Import ...-> External Plugins -> with source, select all plugins and import. 	Build takes a long time (different discussion) Then I turn on my profiler 	Show Problems View (has >1700 entries where 300 match my filter) Stop profiler. More than 80% of the time of showing the view is spent in sorting the entries. I drilled down a bit. I noticed the use of java.text.Collator.compare Using google for Collator+slow, I found the following link. Please scroll down to the word "slow": 	http://klomp.org/mark/classpath/doc/api/html/java/text/RuleBasedCollato r.html Here is one of the culprits: 	package org.eclipse.ui.views.markers.internal; 	public class FieldFolder implements IField { 	public int compare(Object obj1, Object obj2) { 		if (obj1 == null || obj2 == null || !(obj1 instanceof ConcreteMarker) || !(obj2 instanceof ConcreteMarker)) { 			return 0; 		} >>>>>>>>	return Collator.getInstance().compare(getValue(obj1), getValue (obj2)); 	} With just 2 minutes of Google, I foudn this link: 	http://sunsite.iisc.ernet.in/virlib/java/unleash/jul15.htm Again, scroll down to "slow": "It is simple to compare two strings using the Collator.compare() method. However, the comparison algorithm used by Collator.compare() is very complex. If you are sorting long lists of strings, the operation may be very slow because compare() repetitively compares the same strings. As an alternative, you can use the java.text.CollationKey class, which is a key representing a given string in a collation. You can generate CollationKey objects for all your strings and cache them for use in all comparisons instead of using the strings themselves. Because they are bit-ordered, CollationKey objects 	allow you to do bitwise comparisons; in addition, once the keys are generated, comparisons are faster than direct comparisons of the two strings." Why is this relevant? Problems view is *always* in my workbenches. I assume this is the case for everyone. Many views share this logic. All these views have to be sorted before they can be shown. I can only imagine how big the Progress View grows in the case of a larg user workspace in a commercial product, such as WSAD. Using a stopwatch, I see the view shown after 1 second, the table after 3, and the contents after 4 seconds. In total ***15 million*** method calls are made. Not acceptable for sorting just 1700 strings.