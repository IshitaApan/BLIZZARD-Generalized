[CommonNavigator] Incorrect pipeline logic for interceptXxx methods

Created attachment 143359 org.eclipse.ui.tests.navigator unit test patch (apply after patch #143260) Build ID: I20090730-2000 Steps To Reproduce: See attached patch for a unit test that shows the issue. - Declare an M1 content provider that overrides the resourceContent provider replaces IResources with M1Resources, - Issue a viewer.remove(IResource) call. M1Provider.interceptRemove is not called due to the implementation of NavigatorContentExtension.getOverridingExtensionsForPossibleChild(...). That method is looking for IResource contributors that have overriding extensions, but filters the overriding extensions by possibleChild. More information: If an extension overrides an IResource provider it is logically not to provide IResources, but to replace them with some other entities, so it won't have IResource as a possibleChild. The correct logic is to look for overriding extensions that may have replaced the current element, i.e. (it seems) overriding extensions that have the element's parent in their trigger points. The same issue exists with viewer.refresh and interceptRefresh. interceptAdd is invoked based on trigger points, and will sometimes be invoked and sometimes not depending on whether the added resource happens to be a trigger point for the overriding extension. The attached patch to org.eclipse.ui.tests.navigator demonstrates the problem. The patch must be applied after patch https://bugs.eclipse.org/bugs/attachment.cgi?id=143260 .