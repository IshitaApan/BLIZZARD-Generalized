Add support for specifying Unicode locale extensions

Overview --------- Operating systems allow user to select calendar type to be used for interpreting / configuring and manipulating dates in applications. For example, when default locale is set to Hebrew user is capable to select either Gregorian or Hebrew national calendar. As opposed to operating systems Eclipse does not have a similar mechanism. Consequently user can't choose which calendar will be used in Eclipse for interpreting and manipulating with dates. How calendars are currently addressed in Eclipse ------------------------------------------------- Calendars support in Eclipse is limited by default configuration provided by appropriate Java/ICU4J classes. In those classes calendar type is tightly connected with locale. In other words, there is one-to-one correspondence between Eclipse default locale and the calendar type used. Here are a couple of examples borrowed from bug 224794: 1. PropertiesDialog & Properties view In those cases com.ibm.icu.text.DateFormat.getDateTimeInstance(int, int) is used to format the Last Modified Time property. 2. LogEntry, LogViewLabelProvider The error log view doesn't use ICU, instead it uses java.text.SimpleDateFormat with a fixed format. In both cases by default Gregorian calendar is associated with default Bidi locales (Arabic/Hebrew). What is the problem ? --------------------- The problem is however not in "incorrect" default association between default locale and calendar type but in lack of support to configure this association. Please notice that both Java/ICU4J allows configuration of calendar type in DateFormat/SimpleDateFormat classes. This can be done via setCalendar function. In addition, ICU4J do support Hebrew and Islamic-Hijri calendars. The only missing piece is to provide a similar to OS level calendar configuration in Eclipse and use it during manipulations with dates via DateFormat/SimpleDateFormat classes. Moreover, lack of such configuration on the Eclipse level forces Eclipse based products to provide such configuration as part of those products. This of course might lead to inconsistency. Translated date vs. calendar type ---------------------------------- Please notice that translated calendar is something different from calendar type. Gregorian calendar is translated to Arabic/Hebrew (and I guess to many other languages). Translation is usually associated with locale. For example, with default English locale and Gregorian calendar in use the date will be represented as: 05 august 2008 While, with default Hebrew locale and Gregorian calendar in use the date will be represented as: 05 TSUGUA 2008 Capital Latin characters stay for Bidi letters. Calendar type refer to different from Gregorian calendar type. For example, Hebrew national calendar, Islamic Hijri calendar etc. All those calendars are supported by ICU4J. Please notice that similarly to Gregorian calendar other calendars (i.e. Hebrew, Hijri etc.) can be translated as well. For example with default English locale and Hebrew national calendar in use the date will be represented as: 04 tishrei 5768 While, with default Hebrew locale and Hebrew national calendar in use the date will be represented as: H"ASHSAT IERHSIT D Capital letters stay for Bidi characters. Please notice that in this case even digits are replaced with letters since according to Hebrew national calendar numbers(digits) are represented by Hebrew numerals(letters). Proposed approach to solution ------------------------------ Calendar configuration can be provided via both: a. Command line parameter (i.e. -cal [hijri, hebrew ...]) and b. Eclipse Preferences This configuration can be further used by various components to set appropriate calendar instance in DateFormat/SimpleDateFormat classes.