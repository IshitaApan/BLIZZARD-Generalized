[Workbench] Deadlock in of workbench use of synchronization

in WorkbenchPlugin.bundleChanged there is a synchronize block on a hashset. This block is called whenever a change to the state of a bundle is detected. The listener listening for these change events is a SynchronousBundleListener (see getBundleListener). The net effect is that while a bundle is being activated (i.e., its state is changing), the workbench's listener is notified and synchronizes on the hashset. It seems that through a quirk of classloading or something, hitting the event.getType() line in bundleChanged() can trigger some classloading. I'm not sure exactly what but the thread that has the lock on the hashset blocks trying to get a lock on the classloader. If some other thread has the classloader lock and is trying to change the state of a bundle (thus resulting in a bundleChanged() call) then we get deadlock. Indeed that is what is happening in a case where the PDE Build application is being run using an Eclipse IDE install. See bug 344030. While this may highlight a particular problem with the JVM or Equinox, it would help if we could do one or more of the following: - change the bundle listener to be Asynchronous (not sure I fully understand what the listener is doing or how this would affect that) - move the event.getType() call outside the synchronized block. We are testing this change to see if it helps.