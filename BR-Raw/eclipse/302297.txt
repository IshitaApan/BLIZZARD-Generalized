[EditorMgmt] Editor association seems broken in Helios

Seeing a rather weird problem in Helios with editor association and content types. Has there been any recent changes to the org.eclipse.ui.editors extension point? We are fairly confident that it's not a problem on our end since the same code works fine on Galileo. On Helios, we are using a very recent build (just past M5). Here are some more details... Case 1: We have a content type registered that picks up java files with @WebService annotation. <extension point="org.eclipse.core.runtime.contentTypes"> <content-type id="webServiceSource" name="%jws.content.type.name" base-type="org.eclipse.jdt.core.javaSource" priority="high" file-extensions="java"> <describer class="oracle.eclipse.tools.common.content.TopLevelAnnotationContentDescriber"> <parameter name="annotationRegExp" value="javax\.jws\.WebService\z" /> <parameter name="storeElementValuePairs" value="true" /> </describer> </content-type> We also have another unrelated editor registered as non-default choice for java files. <extension point="org.eclipse.ui.editors"> <editor class="oracle.eclipse.tools.orm.ui.diagram.editor.jpaentities.JpaEntityDiagramEditor" default="false" id="JpaEntityDiagramEditor" icon="platform:/plugin/org.eclipse.jpt.ui/icons/full/obj16/entity.gif" extensions="java" name="%entityEditorName" /> </extension> What we are observing in Helios is that for plain java class files, the standard java editor opens (expected behavior). However, once you add @WebService annotation, the default editor becomes our JpaEntityDiagramEditor. It's almost like base java editor association is lost (or becomes non-default) as soon as a content type is associated with a file. This behavior is not observed in Galileo. Case 2: We have a content type registered for XML files that have a certain root element. <extension point="org.eclipse.core.runtime.contentTypes"> <content-type id="jaxWSBindings" name="%jaxwsBindings.content.type.name" base-type="org.eclipse.core.runtime.xml" priority="high" file-extensions="xml"> <describer class="org.eclipse.core.runtime.content.XMLRootElementContentDescriber2"> <parameter name="element" value="{http://java.sun.com/xml/ns/jaxws}bindings" /> </describer> </content-type> </extension> We then associate that content type with a custom editor. <extension point="org.eclipse.ui.editors"> <editor class="oracle.eclipse.tools.webservices.ui.editors.bindings.jaxws.JAXWSBindingsEditor" extensions="xml" icon="icons/bindings/jax-ws-bindings-icon.png" id="oracle.eclipse.tools.webservices.ui.editors.JAXWSBindingsEditor" name="%JAXWSBindingFileEditor.name"> <contentTypeBinding contentTypeId="oracle.eclipse.tools.webservices.jaxWSBindings" /> </editor> </extension> What we are seeing in Helios is that this editor becomes the default editor for all XML files, even the ones that don't have the expected root element. The standard XML Editor is still available as a choice under the Open menu, but it is no longer the default editor. Again, this behavior is not observed in Galileo. This is also posted as a question on the Platform forum. For x-reference... http://www.eclipse.org/forums/index.php?t=msg&th=162274&start=0&