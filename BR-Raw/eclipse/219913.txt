Display.asyncExec should not be delayed till the workbench is initialized

Build ID: Eclipse 3.4 We are developing Eclipse RCP based applications. Recently we upgraded from Eclipse3.2.2 to Eclipse3.4. Then suddenly our login dialog did not show up in our RCP app. then we found some changes in Workbench and UISynchronizer to fix Bug 178875 that delays display.asyncExec( ) till workbench is initialized in Eclipse3.3. We use lots of Display.asyncExec( ) or UIJobs before Workbench is initialized. One of example is our login dialog. Our login dialog is invoked somewhere in WorkbenchWindowAdvisor.postWindowCreate(), that is much earlier than Workbench.runUI is done. our login dialog has some UIJobs (or display.asyncExec) to get some objects, and after that, we have ModalContext.run( ) which wait for the objects. Since the ModalContext.run( ) is called before Workbench initialization, ModalContext.run( ) waits for the objects from the UIJobs (or display.asyncExec) forever. Our login dialog should be displayed before any page is activated, because, after login, the user's page will be displayed. So I think the strategy in Bug 178875 needs to be improved. We need some flexibility here. like, a RCP application may wants to have a switch to determine when the display.asyncExec starts to be posted. It should not be hard coded to delay all the display.asyncExec post till the Workbench initalization. In our case, definitely we want display.asyncExec to start before login is displayed.