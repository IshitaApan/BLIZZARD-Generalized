[Decorators] DecorationScheduler calling wakeUp()/schedule() on decorationJob too often

Created attachment 119963 PoC patch Build ID: 3.4.1.M20080827-0800a Steps To Reproduce: I am a performance analyst for an adopting product. During analysis of our forthcoming release (based on Eclipse 3.4.1), we observed a lot of stress on the locks used in the eclipse.jobs plugin. One source of this stress is coming from the org.eclipse.ui.internal.decorators.DecorationScheduler class, which is calling wakeUp() and schedule() on its 'decorationJob' thousands of times during a build of a medium-sized workspace. Since this is UI-specific, there should be a check for when the last time the wakeUp() request was made, and only make the request if enough time has elapsed (such as 100 ms). This will ease the stress on the jobs locks slightly. This follows a general pattern that we are seeing, that updates to the UI are made much too quickly, using a lot of system resources. In UI-specific plugins, care should always be taken to not do things too often, thus avoiding unnecessary processing. I have attached a proof-of-concept patch (on R3_4_maintenance) that reduces the number of times these methods are called dramatically for my workload (e.g. from > 17k times to < 1k times).