[DynamicUI] Race condition in Workbench leads to intermittent crashes (org.eclipse.ui.startup)

The Workbench class (org.eclipse.ui.internal) spawns a separate thread to perform processing for the startup registry listener (extension point org.eclipse.ui.startup; the method in the Workbench is registryChanged()). This is fine except that processing of this event uses cached IExtension from the Eclipse registry that, generally speaking, is invalid outside of the scope of this call. By the time the thread spawned from Workbench gets run, the calls "extension.getNamespace()" or methods inside EarlyStartupRunnable may fail as the handle to the extension point becomes invalid. Note the following comment on the IExtension: "These registry objects are intended for relatively short-term use." The easy way to mitigate this problem is to ***do not*** run a separate thread in the Workbench$registryChanged(), but run that registry change processing code right away. The registry events are processed via JobManager and are run on a non-main thread anyway. So, from the casual glance, there is no point in spawning a separate thread on top of already existing secondary Job thread. I might be missing something, however, both Eclipse itself and JUnits run fine if I comment the code that spawns a thread in the Workbench$registryChanged(). Note that this is a hidden problem in the current implementation. However, once the runtime split is done, timing of procedure calls will change slightly and the problem will be exposed in JUnits. It will lead to failures and crashes in the org.eclipse.ui.tests.dynamicplugins.DynamicPluginsTestSuite. [The earlier recorded bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=114405 represents a specific manifestation of this problem and probably should be closed.]