[Commands] IAction.AS_RADIO_BUTTON actions contributed with ActionContributionItem to MenuManager have problems getting checked on selection

+++ This bug was initially created as a clone of Bug #233601 +++ Run the snippet below and 'Click To Show Menu' to open 'Submenu Bar' with several option actions, one of which should be checked. Now select any 'Menu Item' from the submenu. => see 'Activated Menu Item 0' dialog for any item you actually have clicked. => Compare this behavior with drop down ToolBar button's menu. public class SubmenuSnippet { 	public static void main(String[] args) { 		Display display = new Display(); 		Shell shell = new Shell(display); 		shell.setText(SubmenuSnippet.class.getSimpleName()); 		shell.setLayout(new FillLayout()); 		 		Composite parent = new Composite(shell, SWT.NONE); 		parent.setLayout(new GridLayout(2, false)); 		 		final Action showList = new DropDownAction(shell); 		 		final Link menuOwner = new Link(parent, SWT.NONE); 		menuOwner.setText("<a>Click To Show Menu</a>"); 		menuOwner.addSelectionListener(new SelectionAdapter(){ 			public void widgetSelected(SelectionEvent e) { 				// bug appears only for the first time manager creates its menu, 				// so here we create new manager each time to repeat easier 				MenuManager menuManager = new MenuManager(); 				menuManager.add(showList); 				menuManager.createContextMenu(menuOwner).setVisible(true); 			} 		}); 		 		// there are no problems with such contribution to the ToolBarManager 		ToolBarManager toolBarManager = new ToolBarManager(SWT.NONE); 		toolBarManager.add(showList); 		toolBarManager.createControl(parent); 		 		shell.pack(); 		shell.open(); 		while (!shell.isDisposed()) { 			if (!display.readAndDispatch()) { 				display.sleep(); 			} 		} 		display.dispose(); 	} 	public static class DropDownAction extends Action implements IMenuCreator { 		private Menu myDynamicMenu; 		private Shell myShell; 		public DropDownAction(Shell shell) { 			myShell = shell; 			setText("Submenu Bar"); 			setMenuCreator(this); 		} 		public Menu getMenu(Menu parent) { 			return doGetMenu(parent); 		} 		public Menu getMenu(Control parent) { 			return doGetMenu(parent); 		} 		 		private Menu doGetMenu(Object parent) { 			if (myDynamicMenu != null) { 				myDynamicMenu.dispose(); 			} 			if (parent instanceof Menu) { 				myDynamicMenu = new Menu((Menu)parent); 			} else { 				myDynamicMenu = new Menu((Control) parent); 			} 			addEntries(myDynamicMenu); 			return myDynamicMenu; 		} 		public void dispose() { 			if (myDynamicMenu != null) { 				myDynamicMenu.dispose(); 				myDynamicMenu = null; 			} 		} 		protected void addActionToMenu(Menu parent, Action action) { 			ActionContributionItem item = new ActionContributionItem(action); 			item.fill(parent, -1); 		} 		private void addEntries(final Menu menu) { 			for (int i = 0; i < 5; i++) { 				final String next = "Menu Item " + i; 				Action action = new Action(next, IAction.AS_RADIO_BUTTON) { 					public void run() { 						if (isChecked()) { 							MessageDialog.openInformation(menu.getShell(), "Activated Menu Item", next); 						} 					} 				}; 				action.setChecked(i == 0); 				addActionToMenu(menu, action); 			} 		} 		public void run() { 			MessageDialog.openInformation(myShell, "Default Action", "Invoked Defaul Action"); 		} 	} } Initially I have noticed it when added such submenu to FormHeader's MenuManager, so as FormsUI is quite popular, it doesn't seem to be such an unusual use case. I did not dig too deep nor searched too long, so could be completely wrong with this CR. But some debugging showed the following: In case of Menu contribution (when it does not work) these lines get called: org.eclipse.jface.action.ActionContributionItem.copyMenu(Menu, Menu), line 1274 The 'realItem' comes there with SWT.RADIO style, whereas only SWT.TOGGLE or SWT.CHECK are considered, so activation of such item gets ignored. This logic is there since 10-31-2007 (bugfix of https://bugs.eclipse.org/bugs/show_bug.cgi?id=189092 and following https://bugs.eclipse.org/bugs/show_bug.cgi?id=208099), Eclipse 3.4M3. This snippet was tested against Windows Vista and XP only. Initially I have written it for the latest Eclipse3.4RC1, but tried with M7 and M5, where it doesn't work as well. Whereas Eclipse 3.3 doesn't show such problem, everything is fine there.