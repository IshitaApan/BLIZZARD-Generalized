[Viewers][CommonNavigator] remembered contributions can leak when using filters

Currently the CNF remembers the pointer to the navigator content descriptor in the Tree associated with the viewer. It does this by a (secret, under the covers) mechanism to look when the Viewer's element is associated/dissociated with the TreeItem. Since the CNF has to remember these elements as it's adding them to the tree it accumulates them in a temporary hash while the content providers are running. Previously, priors to the fix to bug 305356, the CNF code reset this temporary hash before providing content in responde to getChildren() or getElements(), with the assumption that each time these methods were called by the viewer, the viewer would subsequently associate the returned children element into the tree. However this is not the case, as bug 305356 shows, so the reset was removed. Now (and before as well), whenever an element is associated by the viewer, the CNF is notified and removes the element from the temporary hash. However, I think (I have not verified this), that when using filters, they are processed by the Viewer, so this is a case where elements returned in response to getChildren/Elements would essentially be stuck in the temporary storage. To handle this case, I think we need another point of interface between the Viewers and the CNF for the viewer to tell the CNF that an element has been filtered out.