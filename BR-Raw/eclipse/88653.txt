[Commands] performance: 50% of perspective switch in ParameterizedCommand.equals()

Build: I20050315 Setup: 1) Workspace with three projects, org.eclipse.jdt.core, org.eclipse.swt, and org.eclipse.swt.win32 2) Editor open on org.eclipse.jdt.internal.compiler.parser.Parser.java 3) Default Java perspective and Resource perspective open My test was to switch between the two open perspectives about five times using Ctrl+F8. The profiler showed 50% of the time in ParameterizedCommand.equals() and in the methods called by that equals implementation (Util.equals() and Command.equals()). The main problem is probably in the number of times this method is called (about 1.6 million times). This seems to be caused by a large number of property change events: ExternalActionManager$CommandCallback.bindingManagerChanged is called 30 times. This in turn calls ActionContributionItem$1.propertyChange, which is called 4787 times. The number of method calls explodes as you go down the call stack, until the equals method that is called 1.6 million times. I will attach profiler output to show more details. If the number of change events can't be reduced, it looks like the implementation of ParameterizedCommand.equals() can be made faster by first comparing the cached hash code. Only if the hash codes are the same does it need to do the remainder of the equality testing.