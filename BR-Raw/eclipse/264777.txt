[context] Improve memory consumption for the context injection

Created attachment 125585 Patch The context injection creates a link object for every injected context element and for every potential element in a user class that can be injected. This is rather inefficient. The problem is that injection in the current paradigm has to run inside IEclipseContext.runAndTrack(Runnable). The Runnable has no information on the actual change and its only course of action is to re-inject whatever is in the context and clear all entries that have been injected but no loger there. The work around this is to add a IEclipseContext.runAndTrack(IRunAndTrack) where IRunAndTrack will have a method: notify(IEclipseContext context, String name, int eventType, Object[] args) passing into the injection metchanism details of what really happenend (initial injection, service removed, service added). With this change we create one link object per context (and, if desired, we could in fact create just one link object for all contexts). The change exposes problem in OSGi context resulting in a test failure in ServiceContextTest.testServiceInjection(). I'll open a separate bug for that.