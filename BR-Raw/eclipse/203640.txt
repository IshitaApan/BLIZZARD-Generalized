[EditorMgmt] IDE.openEditor(IWorkbenchPage, IMarker, boolean) should look for an editor that matches both editor input and editor ID if o.e.ui.ide.IDE.EDITOR_ID_ATTR is set on the marker

Our application creates ProblemMarkers and sets the Marker's o.e.ui.ide.IDE.EDITOR_ID_ATTR attribute with the editorId of our editor. Sometimes this works but other times it opens a different editor (on the proper input). The expected behaviour is for the specified editorId to be opened in all cases. What follows are some of my notes from when I was investigating. ---- I think this happens because of some code in the UI's internal EditorManager. The method #findEditor( String, IEditorInput, int ) uses #findEditors( String, IEditorInput, int ) [Note the plural] and then returns the first element of that array. Because ActionOpenMarker specifies a matchFlag of MATCH_INPUT this internal call returns an array of several editors (each with its own editorId). Sometimes this array is ordered { X, Y }, but other times it is { Y, X }. The result is that sometimes our ProblemMarker opens the proper editor and sometimes it does not. In a newsgroup post (http://www.eclipse.org/newsportal/article.php?id=68556&group=eclipse.platform#68556) Paul Webster suggested a change in IDE.openEditor or WorkbenchPage.openEditor would fix this case. I've also included the patch I proposed at the start of that thread. Index: Eclipse UI/org/eclipse/ui/internal/EditorManager.java =================================================================== RCS file: /cvsroot/eclipse/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/EditorManager.java,v retrieving revision 1.136 diff -u -r1.136 EditorManager.java --- Eclipse UI/org/eclipse/ui/internal/EditorManager.java	24 May 2007 15:30:26 -0000	1.136 +++ Eclipse UI/org/eclipse/ui/internal/EditorManager.java	17 Sep 2007 19:03:21 -0000 @@ -395,6 +395,14 @@ 		if (refs.length == 0) { 			return null; 		} + +		// return the first editor with a matchingId, default to the +		// first editor if no ids match +		if( editorId != null ) +			for( int i = 0; i < refs.length; ++i ) +				if( editorId.equals( refs[i].getId() ) ) +					return refs[i].getEditor( true ); + 		return refs[0].getEditor(true); 	}