[DataBinding]  NPE when getter called on disposed observable

Created attachment 83076 Patch for NPE Calling a @TrackedGetter method on an observable which has been disposed causes an NPE in ObservableTracker.getterCalled(). This many levels deep into the JDB framework it is unclear without inspecting the source what the programmer's error is. Ideally the framework should be more descriptive in its error messages to help the programmer correct errors without much fuss. The attached patch explicitly checks for observable.getRealm() == null (indicating a disposed observable) and throws a more descriptive exception. Turns out the failing tests I mentioned in the JDB conference call yesterday were due to my error message using observable.toString(), which caused infinite recursion on the getterCalled() method, resulting in a stack overflow. By using a custom toString() implementation I can get around this. As a side note, I'm not sure that making equals(), hashCode() and toString() tracked getters was a good idea. The getterCalled() interaction causes lots of side effects in otherwise innocuous situations. For example, using an IObservable in a set (where equals is used to check whether an element is already present) invokes getterCalled(). If outside the realm, you can't even *touch* an IObservable.