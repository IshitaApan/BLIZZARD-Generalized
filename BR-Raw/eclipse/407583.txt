Avoid spurious NPE when model processor was not created

ModelAssembler#runProcessor() does not check that the processor created by the IContributionFactory is not null. This leads to a spurious NPE when the standard ReflectionContributionFactory returns null when unable to create the provided object. !ENTRY org.eclipse.e4.ui.workbench 2 0 2013-05-08 15:22:50.502 !MESSAGE Could not run processor !STACK 0 java.lang.NullPointerException 	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:220) 	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:107) 	at org.eclipse.e4.ui.internal.workbench.ModelAssembler.runProcessor(ModelAssembler.java:226) 	at org.eclipse.e4.ui.internal.workbench.ModelAssembler.processModel(ModelAssembler.java:191) 	at org.eclipse.e4.ui.internal.workbench.ResourceHandler.loadMostRecentModel(ResourceHandler.java:219) 	at org.eclipse.e4.ui.internal.workbench.swt.E4Application.loadApplicationModel(E4Application.java:395) 	at org.eclipse.e4.ui.internal.workbench.swt.E4Application.createE4Workbench(E4Application.java:238) 	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:581)