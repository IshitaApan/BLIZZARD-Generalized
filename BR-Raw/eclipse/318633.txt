Part/editor switching is very slow

Build Identifier: I20100630-1856 Switching between editors and parts is very slow (tested on a Core 2 T5600 under Windows 7). Delay is about 2 seconds. I did a quick analysis with the YourKit Java Profiler. Here is what I did: 1. Open two text files (almost empty) 2. Start the profiler 3. Switch from one editor to the other 4. Stop the profiler Thus, there was only a single focus transfer. The results are (see also attached screenshots): Most of the time is consumed by the invocation of java.lang.reflect.Method.getParameterAnnotations(). For a single focus transfer, this method is called several thousand times. The back traces show that these inovations come from the setId() and setClassname() methods in the PartRenderingEngine, which in turn gets called on part activation (WBWRenderer.trackActivePart(...)). Unfortunately, I cannot tell which method in the stack trace actually causes these many invations, because the invocation counts in the profiler are not shown (for some unknown reason). Is there a way to reduce this high count of invocations? This would greatly improve the editor switching time. Reproducible: Always