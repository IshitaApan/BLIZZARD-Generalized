[Contributions] PopupMenuExtender causes CCE with GMF

From bug 224682 Anthony: In Eclipse GMF, we have a PluginMenuManager that implements IMenuManager directly. As a result, this patch causes a class cast exception. I tried making PluginMenuManager extend ContributionManager but that breaks more things in GMF. Can we add some protection code around the patch? + if (items[i] instanceof IMenuManager) { should be + if (items[i] instanceof IMenuManager && items[i] instanceof ContributionManager) { Is it now a requirement that all IMenuManager be ContributionManager? -------- Eric: Anthony, Its always been a requirement that IMenuManager implementations derive from our MenuManager class (which -is- a ContributionManager): The IMenuManager javadoc says... "This interface is internal to the framework; it should not be implemented outside the framework." ...and gives a reference to using MenuManager as the base class. In this case while I agree we could (and should) have been cleaner the IMenuService exposes the methods using ContributionManager as the argument type so we're stuck with it for 3.4 I think. Where do the menus managed by your IMenuManager implementation show up? I ask because if they're not expected to be extended using org.eclipse.ui.menus extensions we -might- be able to safe up the code to at least avoid the CCE but I consider this dicey since if it were ever extended it'd immediately start leaking... Paul, we should talk about this one... -------- Anthony: Unfortunately, GMF committed PluginMenuManager back in Bug 109904 (Sept 22 2005) and I do want to start changing this old code this late in the release. The PluginMenuManager wraps a "real" IMenuManager. private class PluginMenuManager implements IMenuManager { private IMenuManager realMenuManager; public PluginMenuManager(IMenuManager menuManager) { this.realMenuManager = menuManager; } public void add(IAction action) { realMenuManager.add(action); } public boolean isVisible() { if (!areActivitiesEnabled(getId())) { return false; } return realMenuManager.isVisible(); } [...] Both of the authors of this code are no longer on GMF. -------- Anthony: (In reply to comment #10) > Where do the menus managed by your IMenuManager implementation show up? As I said above, the PluginMenuManager is wrapping a valid IMenuManager implementation.