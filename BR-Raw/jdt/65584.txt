TemplateReaderWriter should take stream as argument.

RC1, continued from bug 64947: Users of the org.eclipse.ui.editors.templates extension point can contribute templates by specifying an XML document containing the templates. This document will usually contain an encoding spec. However, TemplateReaderWriter.read() takes a Reader which already expects a decoded character stream. This is useful when one wants to operate on Java strings, but in the case of contributed templates, it should be possible to pass an InputStream (of bytes) instead of a Reader, so that the XML engine can figure out the encoding from the XML header. Currently, contributed template files are translated using a hard coded encoding. We should add overloaded versions of read() and save() methods taking streams instead of Reader/Writer. Given that TemplateReaderWriter is marked as "Clients may instantiate this class" and was introduced in 3.0, this would be a very low risk API addition.