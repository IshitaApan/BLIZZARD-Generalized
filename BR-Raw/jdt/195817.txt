[extract interface] bug with enhanced for loop

Build ID: I20070621-1340 Steps To Reproduce: The extract interface refactoring sometimes produces invalid code. I have seen a bug report (https://bugs.eclipse.org/bugs/show_bug.cgi?id=184766) with a more complex test case (with generics etc.) which may boil down to the same issue. Here's my simpler test case. It involves two classes: public class MyTest { 	public void m1() 	{				 	} 	public void m2() 	{			 	} } public class Test { 	public static void main(String[] args) 	{ 		MyTest[] arr = new MyTest[5];	 		for(MyTest mytest : arr) 		{ 			mytest.m1(); 		} 	} } To reproduce, use "Extract interface" on the class MyTest and select method m2() for extraction (keeping all other options default). The refactor function will incorrectly change the type MyTest in the for-loop to the new interface, which fails because m1() isn't extracted. More information: The error doesn't occur in case of for-constructs like "for(MyTest x = m; ; )" where m has type MyTest. In that case the refactoring realizes it can't use the extracted interface due to the call to m1(). This suggests that it is something specifically related to the handling of the for(type x : y) construct - "type" is substituted with the new type even if the substitution isn't compatible with the contents of the block.