[compiler] Support common debug pattern in unreachable code detection

I20081119-1600 Follow-up to bug 48399. After enabling the new dead code detection compiler option, we found that most hits in our codebase were debug switches as exemplified in JLS3 13.4.9 and 14.21: class Flags { final static boolean DEBUG = true; } class Test { public static void main(String[] args) { if (Flags.DEBUG) System.out.println("debug is true"); } } Could you add this as a sub-option of COMPILER_PB_DEAD_CODE? I would only expect this exception rule to suppress warnings of one of the forms ... - 'if (DEBUG) THEN' or - 'if (DEBUG) THEN else ELSE' ... where ... - DEBUG is the qualified or unqualified name of a 'static final boolean' field which is initialized to either 'true' or 'false', and - either THEN or ELSE is a statement that is marked as dead code.