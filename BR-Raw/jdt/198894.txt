Performance tests commit measurement in done in loop in several tests

Observed in build I20070802-0800 but I guess it's done since a (long) time... Following tests commit performance results inside a loop instead of doing it after: org.eclipse.jdt.ui.tests.performance.views.CleanUpPerfTest#testAllCleanUps() org.eclipse.jdt.ui.tests.performance.views.CleanUpPerfTest#testCodeStyleCleanUp() org.eclipse.jdt.ui.tests.performance.views.CleanUpPerfTest#testControlStatementsCleanUp() org.eclipse.jdt.ui.tests.performance.views.CleanUpPerfTest#testConvertLoopCleanUp() org.eclipse.jdt.ui.tests.performance.views.CleanUpPerfTest#testExpressionsCleanUp() org.eclipse.jdt.ui.tests.performance.views.CleanUpPerfTest#testJava50CleanUp() org.eclipse.jdt.ui.tests.performance.views.CleanUpPerfTest#testNullCleanUp() org.eclipse.jdt.ui.tests.performance.views.CleanUpPerfTest#testSortMembersCleanUp() org.eclipse.jdt.ui.tests.performance.views.CleanUpPerfTest#testStringCleanUp() org.eclipse.jdt.ui.tests.performance.views.CleanUpPerfTest#testUnnecessaryCodeCleanUp() org.eclipse.jdt.ui.tests.performance.views.CleanUpPerfTest#testUnusedCodeCleanUp() org.eclipse.jdt.ui.tests.performance.views.CleanUpPerfTest#testVariableDeclarationCleanUp() org.eclipse.jdt.ui.tests.performance.views.PackageExplorerPerfTest#testOpen() org.eclipse.jdt.ui.tests.performance.views.PackageExplorerWarmPerfTest#testOpen() org.eclipse.jdt.ui.tests.refactoring.reorg.MoveCompilationUnitPerfTests1#test_10_10() org.eclipse.jdt.ui.tests.refactoring.reorg.MoveCompilationUnitPerfTests2#test_10_10() org.eclipse.jdt.ui.tests.refactoring.reorg.MoveStaticMembersPerfTests1#test_10_10() org.eclipse.jdt.ui.tests.refactoring.reorg.MoveStaticMembersPerfTests2#test_10_10() org.eclipse.jdt.ui.tests.refactoring.reorg.RenameMethodPerfTests1#test_10_10() org.eclipse.jdt.ui.tests.refactoring.reorg.RenameMethodPerfTests2#test_10_10() org.eclipse.jdt.ui.tests.refactoring.reorg.RenameMethodWithOverloadPerfTests#test_1000_10() org.eclipse.jdt.ui.tests.refactoring.reorg.RenameMethodWithOverloadPerfTests#test_100_10() org.eclipse.jdt.ui.tests.refactoring.reorg.RenameMethodWithOverloadPerfTests#test_10_10() org.eclipse.jdt.ui.tests.refactoring.reorg.RenamePackagePerfTests1#test_10_10() org.eclipse.jdt.ui.tests.refactoring.reorg.RenamePackagePerfTests2#test_10_10() org.eclipse.jdt.ui.tests.refactoring.reorg.RenameTypePerfTests1#test_10_10() org.eclipse.jdt.ui.tests.refactoring.reorg.RenameTypePerfTests2#test_10_10() This has consequence on perf results numbers as the performance framework assumes that each committed results are independent...