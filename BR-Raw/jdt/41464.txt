"extract interface" could change more references

Given a class Foo public class Foo { public void foo() { } } and a class Bar which uses Foo public class Bar { private Foo foo; public Foo getFoo() { return foo; } public void setFoo(Foo foo) { this.foo = foo; } public void useFoo() { foo.foo(); } } if you extract an interface IFoo for Foo, containing the foo() method and checking "change references...", only the return type of getFoo() in Bar gets changed, though the type of the whole field could be changed to the interface. This severely limits the usefulness of the refactoring.