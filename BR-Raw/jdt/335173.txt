[clean up][quick assist][inline] Fix detection and creation of unnecessary parentheses

We've had a few bugs recently that dealt with missing parentheses in refactorings and quick assists, see bug 332019, bug 330415, bug 322597, bug 331845, maybe more. We need a common solution of all clients of OperatorPrecedence that is correct but does not introduce unnecessary parentheses like some of the previous fixes do. The underlying problem is completely specified in the JLS3 in 15.7, 15.7.3, and following pages that talk about whether operations are associative or not. E.g. 15.17.1 tells that integer multiplication is only associative when all operands are of the same integral type. Also take care that operations with the same precedence can only be associative if they use the same operator, and the operator is + or *. ExpressionsFix.UnnecessaryParenthesisVisitor#canRemoveParenthesis() contains a partial implementation of this. The implementation has been written in an ad-hoc fashion to fix concrete bugs, but it's not complete, and it's not reusable. The inline method refactoring has special needs, since it analyzes the source to be inlined in SourceAnalyzer, and then uses the gathered ParameterData in SourceProvider#replaceParameterWithExpression() to process each reference.