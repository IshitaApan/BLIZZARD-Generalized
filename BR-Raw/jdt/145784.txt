[build path] BuildPathSupport is violating ClasspathContainerInitializer api contract

I found this while trying to debug a problem where I would get an instance of BuildPathSupport$UpdatedClasspathContainer instead of my classpath container class when I would retrieve my classpath container via JavaCore.getClasspathContainer(). See https://bugs.eclipse.org/bugs/show_bug.cgi?id=145062 for more info. I believe the problem to be in this method of the BuildPathSupport class: public static void requestContainerUpdate(IJavaProject jproject, IClasspathContainer container, IClasspathEntry[] newEntries) throws CoreException { IPath containerPath= container.getPath(); IClasspathContainer updatedContainer= new UpdatedClasspathContainer(container, newEntries); ClasspathContainerInitializer initializer= JavaCore.getClasspathContainerInitializer(containerPath.segment(0)); if (initializer != null) { initializer.requestClasspathContainerUpdate(containerPath, jproject, updatedContainer); initializer.requestClasspathContainerUpdate(containerPath, UserLibraryPreferencePage.getPlaceholderProject(), updatedContainer); JavaCore.setClasspathContainer(containerPath, new IJavaProject[] {jproject, UserLibraryPreferencePage.getPlaceholderProject()}, new IClasspathContainer[] {updatedContainer, updatedContainer}, null); // force updating of containers, bug 62250 } } Here is a snippet from the javadoc on the ClasspathContainerInitializer.requestClasspathContainerUpdate method: * IMPORTANT: In reaction to receiving an update request, a container initializer will update the corresponding * container definition (after reconciling changes) at its earliest convenience, using * <code>JavaCore#setClasspathContainer(IPath, IJavaProject[], IClasspathContainer[], IProgressMonitor)</code>. * Until it does so, the update will not be reflected in the Java Model. I believe BuildPathSupport class is violating this API contract by explicitly calling setClasspathContainer after calling requestClasspathContainerUpdate. What happens is that I reconcile the changes and call setClasspathContainer with a new instance of my classpath container class. Then BuildPathSupport wipes out my changes by performing setClasspathContainer with the dummy container. This creates the following problems: 1. Any reconciliation changes are lost. The classpath container is not required to take the update as is. 2. Subsequent usage of getClasspathContainer() api will return an instance of BuildPathSupport$UpdatedClasspathContainer instead of the actual class. 3. There may be perf implications caused by updating the java model twice like this. The #2 is what's presenting the immediate problem for me. I will attempt to work around this, but this really needs to get fixed as soon as possible.