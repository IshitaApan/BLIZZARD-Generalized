Nullpointer in BaseReportEngineServlet

User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.1.2) Gecko/20090729 Firefox/3.5.2 (.NET CLR 3.5.30729) Build Identifier: When a chart image is returned to the browser and the user takes the image URL and sends it to someone else, when that URL is accessed, the BaseReportEngineServlet throws a NullPointerException. It seems to be thrown on a line in BaseReportEngineServlet that tries to lock the session. In this case the session is null because it hasn't been created yet. The session for the current request is checked/created with this piece of code: IViewingSession session = ViewingSessionUtil.getSession( request ); if ( session == null && !isSoapRequest && !ParameterAccessor.isGetImageOperator( request ) ) { if ( ViewingSessionUtil.getSessionId(request) == null ){ 	session = ViewingSessionUtil.createSession( request ); } else { 	// if session id passed through the URL, it means this request 	// was expected to run using a session that has already expired 	throw new ViewerException( BirtResources.getMessage(				ResourceConstants.GENERAL_ERROR_NO_VIEWING_SESSION ) ); } } Well - the URL that BIRT generates for chart images always has an image parameter and a session parameter. http://localhost/birt/preview?__sessionId=20090904_100917_740&__imageid=custom1e79b3f1235d9e5e5162.png Because of this, the logic never creates a new session and therefore tries to call the "lock" method on a null reference. This call returns false "!ParameterAccessor.isGetImageOperator(request)" because of the existence of the __image parameter so the session never gets created. java.lang.NullPointerException 	at org.eclipse.birt.report.servlet.BaseReportEngineServlet.doGet(BaseReportEngineServlet.java:172) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707) 	at org.apache.axis.transport.http.AxisServletBase.service(AxisServletBase.java:327) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820) 	at org.eclipse.birt.report.servlet.BaseReportEngineServlet.service(BaseReportEngineServlet.java:116) 	at weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:226) 	at weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:124) 	at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:283) 	at weblogic.servlet.internal.TailFilter.doFilter(TailFilter.java:26) 	at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42) 	at org.eclipse.birt.report.filter.ViewerFilter.doFilter(ViewerFilter.java:68) 	at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42) 	at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3393) 	at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321) 	at weblogic.security.service.SecurityManager.runAs(Unknown Source) 	at weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:2140) 	at weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:2046) 	at weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1366) 	at weblogic.work.ExecuteThread.execute(ExecuteThread.java:200) 	at weblogic.work.ExecuteThread.run(ExecuteThread.java:172) > Reproducible: Always Steps to Reproduce: 1.Create a report with a chart 2.View it via HTML 3.Copy the chart image location 4.Open in different browser or close current browser, reopen and paste URL to image. (Basically start a new session but try to access the image using the URL with the old session id)