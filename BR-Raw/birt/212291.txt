SWT Chart render engine always uses 96 DPI(Display) resolution

Created attachment 84764 Charts with/without render errors I want to render my chart to printer device instead of default display device which has 96 dpi resolution. Everything works fine, BUT render engine doesn't take into account printer DPI that I had set up via IDisplayServer interface like: ... render.getDisplayServer().setDpiResolution(printer.getDPI().x); // in my case 600 -> HP printer res ... and I have the following chart (see attachment: charts.png upper part) As you can see the font size is too small. (SwtDisplayServer.createFont method uses dScale) but if I'll setup break point inside SwtDisplayServer.setDpiResolution(int dpi) method and recalculate dScale member of SwtDisplayServer as ... dScale = iDpiResolution / 72d; ... then everything will be work fine. Render to display/printer is OK. (see the bottom part of the attached image.) My workaround is: 1. I have imported org.eclipse.birt.chart.device.swt_2.2.1.xxx plugin project to my workspace, fix the bug: just add one line of code: public final void setDpiResolution( int dpi ) { iDpiResolution = dpi; dScale = iDpiResolution / 72d; // Added: adjust scale factor } 2. Registered the plugin as a new devicerenderer(dv.PRINTER) and displayserver(ds.PRINTER) via extension points: org.eclipse.birt.chart.engine.devicerenderers and org.eclipse.birt.chart.engine.displayservers. 3. I have changed initialization of IDS interface inside SwtRendererImpl ctor as _ids = ps.getDisplayServer( "ds.PRINTER" ); BUT I hope it is temporary solution for me. I do not want sync org.eclipse.birt.chart.device.swt_2.2.1.xxx plugin project with Eclipse CVS repository every time when you guys delivery a new version of birt :) Could you plan the bug fixing? :) p.s. If you have any questions or something unclear, just send me a note. --8<-- working initialization sequence for printing chart via ds.SWT ;) // // chart - Chart interface // // Initialize the Printer rendering device Point dpi = printer.getDPI(); // = Display.getDefault().getDPI(); PluginSettings ps = PluginSettings.instance(); render = ps.getDevice("dv.SWT"); // dv.PRINTER //!!! we want render to a printer //!!! recalculate dScale inside SwtDisplayServer.setDpiResolution(int dpi); render.getDisplayServer().setDpiResolution(dpi.x); // use all available area for chart rendering Bounds bo = BoundsImpl.create(...); bo.scale(72.0d / render.getDisplayServer().getDpiResolution()); // 	 // builds and computes preferred sizes of various chart components Generator generator = Generator.instance(); state = generator.build(render.getDisplayServer(), chart, bo, null, null, null); 	 gc = new GC(printer); 	// create graphics context for display or printer printer.startPage();	// start printer page 			 // set render properties render.setProperty(IDeviceRenderer.GRAPHICS_CONTEXT, gc); render.setProperty(IDeviceRenderer.DPI_RESOLUTION, dpi.x); // IMPORTANT TOO generator.render(render, state); // main job done here printer.endPage();		// finish printer page printer.endJob();		// finish printer job ---8<---