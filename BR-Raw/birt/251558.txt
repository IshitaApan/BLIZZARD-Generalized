Stored procedure data set is always called twice

Created attachment 115711 SQL Server Profiler trace as described Build ID: I20080617-2000 Steps To Reproduce: This looks similar to, but is not the same as Bug 234553. This is related to stored procedure calls, not select queries, and has been tested against SQL Server. 1. Create a blank BIRT report. 2. Add a new data source. Choose JDBC Data Source. I am using the latest jTDS driver (http://sourceforge.net/project/showfiles.php?group_id=33291). I have tested against SQL Server 2005 and 2008 with the same results. Here is my driver URL: jdbc:jtds:sqlserver://server-address:1433/dbname;ssl=off 3. Add a new stored procedure data set using the above data source. 4. To limit the scope of the problem, I am calling a simple test procedure: create procedure test as begin 	select * from table end You should replace the select statement with a relevant query. 5. This is the call defined in my data set: {call test()} 6. Drag-and-drop the data set to the body of the report. 7. Click preview. To see the query executed twice, you can use SQL Server Profiler (steps for SQL Server 2005): 1. Open SQL Profiler and connect to the test server. 2. Create a new trace and use the blank template. 3. Select "show all events" and "show all columns". 4. Expand Stored Procedures and select "SP:Starting", "SP:StmtStarting", "SP:StmtCompleted" and "SP:Completed". 5. Click "Column Filters". 6. Choose "Object Name" from the list. Add a "Like" filter with the value "test" (or whatever your test procedure is called) and check the "Exclude rows that do not contain values" option. 7. Run the trace and preview the report in BIRT. More information: Notice that the "TextData" column shows the stored procedure executing twice. This is evidenced by the two SP:Completed events. Also notice the "Reads" column in SQL Profiler is populated for both select statements. This is not a metadata only operation. If it was, then one of the queries would have 0 reads (as would be expected when using SET FMTONLY ON). These are two complete executes of the procedure. Another way to confirm the query is actually executing is to put WAITFOR DELAY '00:00:10' inside the test stored procedure. This will introduce a 10 second delay to the procedure call. I have not tested this against any other DB vendors as I do not have any available. My SQL Profiler trace is attached.