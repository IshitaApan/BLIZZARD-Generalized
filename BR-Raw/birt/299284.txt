OutOfMemory error when running reports with large number of rows

Created attachment 155746 test.rptdesign Hello, I am evaluating BIRT 2.5.1 to generate reports in our application (which is currently using BIRT 2.3.1). I discovered that the reports we generate fail for a large number of rows when using releases 2.5 and 2.5.1. The failure is always an "java.lang.OutOfMemoryError: Java heap space" error. I created a small program to test this: 	public class BugReport { 	 	 public static void main(String[] args) { 	 	 InputStream input = null; 	 FileOutputStream out = null; 	 	 try { 	 							(...) 							 	 DataSetHandler.setRowCount(10000); 	 	 final EngineConfig engineConfig = new EngineConfig(); 	 engineConfig.setBIRTHome(platformFolder); 	 	 Platform.startup(engineConfig); 	 	 IReportEngineFactory factory = 	 (IReportEngineFactory) Platform.createFactoryObject(IReportEngineFactory.EXTENSION_REPORT_ENGINE_FACTORY); 	 	 IReportEngine engine = factory.createReportEngine(engineConfig); 	 	 IReportRunnable reportRunnable = engine.openReportDesign(input); 	 	 IRunAndRenderTask task = engine.createRunAndRenderTask(reportRunnable); 	 	 out = new FileOutputStream(outputFileName); 	 	 IRenderOption options = new RenderOption(); 	 options.setOutputFormat(format); 	 options.setOutputStream(out); 	 task.setRenderOption(options); 	 	 task.run(); 	 	 } catch (Exception e) { 	 e.printStackTrace(); 	 } finally { 						(...) 	 		} 	 } 	} public class DataSetHandler extends ScriptedDataSetEventAdapter { private static int sRowCount = 10000; public static void setRowCount(int pRowCount) { sRowCount = pRowCount; } private int mRow; @Override public void open(IDataSetInstance pDataSet) { mRow = 0; } @Override public boolean describe(IDataSetInstance pDataSet, IScriptedDataSetMetaData pMetaData) { pMetaData.addColumn("Integer", Integer.class); pMetaData.addColumn("String1", String.class); pMetaData.addColumn("String2", String.class); return true; } @Override public boolean fetch(IDataSetInstance pDataSet, IUpdatableDataSetRow pRow) throws ScriptException { if (mRow < sRowCount) { pRow.setColumnValue("Integer", mRow); pRow.setColumnValue("String1", "This is a test string for row " + mRow); pRow.setColumnValue("String2", "This is another test string for row " + mRow); mRow++; return true; } return false; } @Override public void close(IDataSetInstance pDataSet) {} 	} I run this code with the attached "test1.rptdesign" report file which uses a scripted data source. The result of the test is the following: 		 		 With a maximum of 64M of heap space: 		+ HTML generation fails for 10.000 rows 		+ XLS generation fails for 10.000 rows 		+ PDF generation is OK even for 100.000 rows With 128M of heap space: 		+ HTML generation fails for 30.000 rows 		+ XLS generation fails for 20.000 rows With 256M of heap space 		+ HTML generation fails for 50.000 rows 		+ XLS generation fails for 30.000 rows I also noticed that changing the "Page Break Interval" option for the table in the report has a big impact on the memory consumption. For example, trying to set it to "-1" to disable the page breaks (which was allowed in 2.3.1) will provoke a report generation failure for PDF with 20.000 rows and a maximum of 64M heap space. I also tested with the BIRT 2.5.1 rcp designer and created the same kind of simple report (see attached test2.rptdesign). I observe the same kind of behaviour as with my test program in the case of a 256M heap space. I monitored the memory usage with jvisualvm and produced some heapdumps during the failing report generations. It looks like a huge number of instances of org.w3c.dom.css.CSSValue[] org.eclipse.birt.report.engine.content.impl.CellContent org.eclipse.birt.report.engine.content.impl.DataContent org.eclipse.birt.report.engine.content.impl.AbstractContent$ContentStyle org.eclipse.birt.report.engine.api.InstanceID org.eclipse.birt.report.engine.css.dom.StyleDeclaration org.eclipse.birt.report.engine.css.dom.ComputedStyle are created. Can you provide urgent help on this issue? We would like to migrate to 2.5.1 to benefit from the new "Java Object" data type. Thanks in advance. Nicolas