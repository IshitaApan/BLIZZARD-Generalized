Tomcat leaks memory on every request

POST parameter values stay referenced by a static field in org.apache.tomcat.util.buf.StringCache - thus the GC can never release the memory. Steps to Reproduce: 1) install and start tomcat 5.5 (http://apache.zone-h.org/tomcat/tomcat-5/v5.5.20/bin/apache-tomcat-5.5.20.zip) 2) see the example webapp "Request Parameters Example" included in the install (http://localhost:8080/servlets-examples/servlet/RequestParamExample) 3) run script "send.sh" to create heavy load #!/bin/bash export LEAK_COMMAND='curl --silent http://localhost:8080/servlets-examples/servlet/RequestParamExample --output response.htm --data @send.txt' #create initial POST parameter with value about 10kB echo "firstname=" > send.txt for((i=0;$i<=10000;i=$(($i+1))));do echo -n "x" >> send.txt done #send the request for((i=0;$i<=1000;i=$(($i+1))));do echo $i # modify the param value to send (append i) echo -n $i >> send.txt $LEAK_COMMAND done 4) running the script causes heap usage to increase for some 40MB